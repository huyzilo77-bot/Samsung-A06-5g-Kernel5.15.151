name: Build Kernel Samsung A06B

on:
  workflow_dispatch:   # Cho phép chạy thủ công
  push:
    branches:
      - main           # Tự động build khi push code lên nhánh main

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      # Checkout code
      - name: Checkout source
        uses: actions/checkout@v4

      # Setup dependencies
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y git device-tree-compiler lz4 xz-utils zlib1g-dev \
            openjdk-17-jdk gcc g++ python3 python-is-python3 p7zip-full \
            android-sdk-libsparse-utils erofs-utils \
            flex bison gperf build-essential zip curl bc \
            libc6-dev libncurses-dev libx11-dev libreadline-dev libgl1 \
            libgl1-mesa-dev libxml2-utils xsltproc cpio kmod openssl \
            libelf-dev pahole libssl-dev libarchive-tools zstd

      # Download toolchains
      - name: Setup toolchains
        run: |
          mkdir -p $HOME/toolchains
          cd $HOME/toolchains

          # Clang r450784e
          curl -LO https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/722c840a8e4d58b5ebdab62ce78eacdafd301208/clang-r450784e.tar.gz
          mkdir clang-r450784e && tar -xf clang-r450784e.tar.gz -C clang-r450784e
          rm clang-r450784e.tar.gz

          # ARM GNU toolchain 14.2
          curl -LO https://developer.arm.com/-/media/Files/downloads/gnu/14.2.rel1/binrel/arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
          tar -xf arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
          mv arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu gcc
          rm arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz

      # Export env
      - name: Setup env
        run: |
          echo "PATH=$PATH:$HOME/toolchains/clang-r450784e/bin" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/toolchains/clang-r450784e/lib64" >> $GITHUB_ENV
          echo "BUILD_CROSS_COMPILE=$HOME/toolchains/gcc/bin/aarch64-none-linux-gnu-" >> $GITHUB_ENV
          echo "BUILD_CC=$HOME/toolchains/clang-r450784e/bin/clang" >> $GITHUB_ENV

      # Build Kernel
      - name: Build kernel
        run: |
          mkdir -p out
          make O=out ARCH=arm64 a06x_00_defconfig
          make -j$(nproc) O=out ARCH=arm64 \
            CC=$BUILD_CC \
            CROSS_COMPILE=$BUILD_CROSS_COMPILE \
            CLANG_TRIPLE=aarch64-linux-gnu- \
            LLVM=1 LLVM_IAS=1

      # Pack AnyKernel3
      - name: Pack AnyKernel3
        run: |
          git clone https://github.com/osm0sis/AnyKernel3.git AnyKernel
          cp out/arch/arm64/boot/Image* AnyKernel/
          cp out/arch/arm64/boot/dtb* AnyKernel/ || true
          cp out/arch/arm64/boot/dtbo* AnyKernel/ || true
          cd AnyKernel && zip -r9 ../Kernel-A06B.zip *

      # Upload artifact
      - name: Upload Kernel
        uses: actions/upload-artifact@v4
        with:
          name: Samsung-A06B-Kernel
          path: Kernel-A06B.zip
