name: Build Kernel

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        defconfig: [a06x_00_defconfig, a06x_0_defconfig]

    steps:
    - name: Checkout kernel source
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt update && sudo apt install -y \
        git device-tree-compiler lz4 xz-utils zlib1g-dev openjdk-17-jdk \
        gcc g++ python3 python-is-python3 p7zip-full android-sdk-libsparse-utils erofs-utils \
        default-jdk git gnupg flex bison gperf build-essential zip curl libc6-dev \
        libncurses-dev libx11-dev libreadline-dev libgl1 libgl1-mesa-dev \
        python3 make bc grep tofrodos python3-markdown libxml2-utils xsltproc \
        cpio kmod openssl libelf-dev pahole libssl-dev libarchive-tools zstd

    - name: Setup clang
      run: |
        mkdir -p $HOME/toolchains
        cd $HOME/toolchains
        curl -LO https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/722c840a8e4d58b5ebdab62ce78eacdafd301208/clang-r450784e.tar.gz
        mkdir clang-r450784e && tar -xf clang-r450784e.tar.gz -C clang-r450784e
        echo "$HOME/toolchains/clang-r450784e/bin" >> $GITHUB_PATH

    - name: Setup ARM GNU Toolchain
      run: |
        cd $HOME/toolchains
        curl -LO https://developer.arm.com/-/media/Files/downloads/gnu/14.2.rel1/binrel/arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
        tar -xf arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
        echo "$HOME/toolchains/arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu/bin" >> $GITHUB_PATH

    - name: Apply KernelSU Next + SUSFS patch
      run: |
        git clone https://github.com/KernelSU-Next/KernelSU-Next.git KernelSU-Next
        git clone https://gitlab.com/simonpunk/susfs4ksu.git susfs
        cd KernelSU-Next
        ./setup.sh ../   # patch KernelSU vào source chính
        cd ..
        cp -r susfs/kernel_patches/* .  # copy patch của SUSFS

    - name: Build Kernel (${{ matrix.defconfig }})
      run: |
        export ARCH=arm64
        export PATH=$HOME/toolchains/clang-r450784e/bin:$PATH
        export CROSS_COMPILE=$HOME/toolchains/arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-
        export CC=clang
        mkdir -p out
        make O=out ${{ matrix.defconfig }}
        make -j$(nproc) O=out \
          ARCH=arm64 LLVM=1 LLVM_IAS=1 \
          CROSS_COMPILE=$CROSS_COMPILE \
          CC=$CC \
          CLANG_TRIPLE=aarch64-linux-gnu- \
          V=1 \
          Image

    - name: Pack with AnyKernel3
      run: |
        git clone https://github.com/osm0sis/AnyKernel3.git AnyKernel3
        cp out/arch/arm64/boot/Image AnyKernel3/
        cd AnyKernel3
        zip -r9 Kernel-${{ matrix.defconfig }}.zip *

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: Kernel-${{ matrix.defconfig }}
        path: AnyKernel3/*.zip
